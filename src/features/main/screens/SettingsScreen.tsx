import { useEffect, useMemo, useState } from "react";
import ScreenHeader from "@/features/main/components/ScreenHeader";
import { useUserRuntime } from "@/features/user/UserRuntimeContext";

export default function SettingsScreen() {
  const [devMode, setDevMode] = useState(false);
  const [devMessage, setDevMessage] = useState<string | null>(null);
  const { balances, runtime, addGram, resetAll } = useUserRuntime();

  const numberFormatter = useMemo(() => new Intl.NumberFormat("ru-RU"), []);
  const goldFormatter = useMemo(
    () =>
      new Intl.NumberFormat("ru-RU", {
        minimumFractionDigits: 0,
        maximumFractionDigits: 4,
      }),
    [],
  );

  const handleAddFunds = () => {
    const amount = 1_000;
    addGram(amount);
    setDevMessage(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${numberFormatter.format(amount)} GRAM –Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å.`);
  };

  const handleReset = () => {
    resetAll();
    setDevMessage("–ë–∞–ª–∞–Ω—Å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–±—Ä–æ—à–µ–Ω—ã.");
  };

  useEffect(() => {
    if (!devMode) {
      setDevMessage(null);
    }
  }, [devMode]);

  return (
    <section className="screen settings" aria-label="–ù–∞—Å—Ç—Ä–æ–π–∫–∏">
      <div className="settings-container screen-stack">
        <ScreenHeader title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏" subtitle="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º –∏ —Ä–µ–∂–∏–º–∞–º–∏" />

        <div className="settings-sections">
          {/* Dev Mode */}
          <div className="settings-card">
            <div className="settings-card__header">
              <h2>üõ†Ô∏è Dev Mode</h2>
              <label className="settings-toggle">
                <input
                  type="checkbox"
                  checked={devMode}
                  onChange={(e) => setDevMode(e.target.checked)}
                />
                <span className="settings-toggle__slider" />
              </label>
            </div>
            {devMode && (
              <div className="settings-card__content">
                <div className="dev-panel">
                  <div className="dev-balance">
                    <span className="dev-balance__label">–¢–µ—Å—Ç–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:</span>
                    <span className="dev-balance__value">
                      <span>{numberFormatter.format(balances.gram)} GRAM</span>
                      <span>{goldFormatter.format(balances.gold)} GOLD</span>
                    </span>
                  </div>
                  <div className="dev-actions">
                    <button type="button" className="dev-button" onClick={handleAddFunds}>
                      + –î–æ–±–∞–≤–∏—Ç—å 1 000 GRAM
                    </button>
                    <button
                      type="button"
                      className="dev-button dev-button--secondary"
                      onClick={handleReset}
                    >
                      –°–±—Ä–æ—Å–∏—Ç—å –±–∞–ª–∞–Ω—Å –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    </button>
                  </div>
                  <div className="dev-stats">
                    <div>
                      <span>–°–æ–∂–∂–µ–Ω–æ –≤—Å–µ–≥–æ:</span>
                      <strong>{numberFormatter.format(runtime.burnedGram)} GRAM</strong>
                    </div>
                    <div>
                      <span>–ù–∞—á–∏—Å–ª–µ–Ω–æ:</span>
                      <strong>{goldFormatter.format(runtime.mintedGold)} GOLD</strong>
                    </div>
                    <div>
                      <span>–°–µ—Å—Å–∏–π –º–∞–π–Ω–∏–Ω–≥–∞:</span>
                      <strong>{runtime.sessionsCompleted}</strong>
                    </div>
                  </div>
                  {devMessage && <p className="dev-feedback">{devMessage}</p>}
                  <p className="dev-note">–í Dev-—Ä–µ–∂–∏–º–µ –º–∞–π–Ω–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</p>
                </div>
              </div>
            )}
          </div>

          {/* Profile Section */}
          <div className="settings-card">
            <div className="settings-card__header">
              <h2>üë§ –ü—Ä–æ—Ñ–∏–ª—å</h2>
            </div>
            <div className="settings-card__content">
              <div className="settings-field">
                <span className="settings-field__label">Telegram ID</span>
                <div className="settings-value">–ù–µ –ø–æ–¥–∫–ª—é—á—ë–Ω</div>
              </div>
              <div className="settings-field">
                <span className="settings-field__label">TON Wallet</span>
                <div className="settings-value">–ù–µ –ø–æ–¥–∫–ª—é—á—ë–Ω</div>
              </div>
            </div>
          </div>

          {/* Interface */}
          <div className="settings-card">
            <div className="settings-card__header">
              <h2>üé® –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å</h2>
            </div>
            <div className="settings-card__content">
              <div className="settings-field">
                <span className="settings-field__label">–ê–Ω–∏–º–∞—Ü–∏–∏</span>
                <label className="settings-toggle settings-toggle--inline">
                  <input type="checkbox" defaultChecked />
                  <span className="settings-toggle__slider" />
                </label>
              </div>
              <div className="settings-field">
                <span className="settings-field__label">–ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã</span>
                <label className="settings-toggle settings-toggle--inline">
                  <input type="checkbox" />
                  <span className="settings-toggle__slider" />
                </label>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
